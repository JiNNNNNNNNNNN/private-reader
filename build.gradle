plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.1'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

group 'com.lv.tool'
version '2.0.0'

repositories {
    mavenCentral()
    maven {
        url 'https://maven.aliyun.com/repository/public'
        allowInsecureProtocol = true
    }
    maven {
        url = uri("https://cache-redirector.jetbrains.com/intellij-repository/releases")
    }
    maven {
        url = uri("https://cache-redirector.jetbrains.com/intellij-repository/snapshots")
    }
}

dependencies {
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.google.inject:guice:7.0.0'
    implementation 'io.projectreactor:reactor-core:3.5.11'
    implementation 'io.projectreactor.addons:reactor-extra:3.5.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
    implementation 'javax.inject:javax.inject:1'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
}

intellij {
    version = '243.24978.46'
    type = 'IC'
    updateSinceUntilBuild = false
    instrumentCode = false
    sameSinceUntilBuild = false
}

patchPluginXml {
    sinceBuild = '241'
    changeNotes = """
      <h3>2.0.0 版本更新</h3>
      <ul>
        <li>重大版本升级：
          <ul>
            <li>全面重构核心解析引擎</li>
            <li>优化内存使用和性能</li>
            <li>改进用户界面体验</li>
            <li>增强缓存管理系统</li>
          </ul>
        </li>
      </ul>
      <h3>Version 2.0.0</h3>
      <ul>
        <li>Major Version Upgrade:
          <ul>
            <li>Complete refactoring of core parsing engine</li>
            <li>Optimized memory usage and performance</li>
            <li>Improved user interface experience</li>
            <li>Enhanced cache management system</li>
          </ul>
        </li>
      </ul>
      """
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

wrapper {
    gradleVersion = '8.5'
    distributionType = Wrapper.DistributionType.BIN
}

// Add duplicate handling strategy for Jar tasks
tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}